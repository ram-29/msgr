const BASE_URL="http://bk.msgr.io",SOCKET_URL="http://localhost:1337";let btnHeaderSetting,btnHeaderMessage,sidebarList,mainHeader,contentChatboxHeader,contentChatboxList,contentChatboxInput,contentChatboxInputBox,btnChatboxPhoto,btnChatboxFile,btnChatboxEmoji,btnChatboxSend;const buildURLQuery=t=>Object.entries(t).map(t=>t.map(encodeURIComponent).join("=")).join("&"),showInput=t=>{contentChatboxInput.children[0].style.visibility="visible",contentChatboxInput.children[1].style.visibility="visible"},initUI=t=>{const e=t.firstElementChild.children[0].src;contentChatboxHeaderImg.setAttribute("src",e);const n=t.firstElementChild.children[1].children[0].textContent;mainHeaderDetailsH4.textContent=n,contentChatboxHeaderDetailsH4.textContent=n};let id,name,SIMPLE,GROUP;const initConn=(t,e)=>{const n=buildURLQuery({id:t,name:e});SIMPLE=io(`${SOCKET_URL}/simple`,{query:n});const o=new SocketIOFileUpload(SIMPLE);document.getElementById("upload_btn").addEventListener("click",o.prompt,!1),o.listenOnInput(document.getElementById("upload_input")),o.listenOnDrop(document.getElementById("file_drop")),o.addEventListener("progress",function(t){const e=t.bytesLoaded/t.file.size*100;console.log("File is",e.toFixed(2),"percent loaded")}),o.addEventListener("complete",function(t){console.log(t.success),console.log(t.file)}),SIMPLE.on("connect",t=>{console.log("You connected to Private Messaging")}),SIMPLE.on("chat",e=>{const{uId:n,message:o,timestamp:i}=e,s=contentChatboxHeaderImg.getAttribute("src"),a=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${i}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===t?"owner":""}">\n                    <img class="img-circle" src="${s}" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${o.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",a),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),SIMPLE.on("disconnect",t=>{console.log("Disconnected to PM"),SIMPLE.disconnect()}),(GROUP=io(`${SOCKET_URL}/group`,{query:n})).on("connect",t=>{console.log("You connected to Group Messaging")}),GROUP.on("chat",e=>{const{uId:n,message:o,timestamp:i}=e,s=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${i}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===t?"owner":""}">\n                    <img class="img-circle" src="/img/1.png" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${o.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",s),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),GROUP.on("disconnect",t=>{console.log("Disconnected to GM"),GROUP.disconnect()})};let mConn={};const connect=(t,e,n)=>{switch(n){case"SIMPLE":SIMPLE.emit("join-room",{id:e}),mConn={id:e,type:"SIMPLE"};break;case"GROUP":GROUP.emit("join-room",{id:e}),mConn={id:e,type:"GROUP"}}initUI(t),showInput()};document.addEventListener("DOMContentLoaded",t=>{btnHeaderSetting=document.querySelector("#btn-header-setting"),btnHeaderMessage=document.querySelector("#btn-header-message"),sidebarList=document.querySelector(".msgr-sidebar-list"),mainHeaderDetailsH4=document.querySelector(".msgr-main-header-details > h4"),contentChatboxHeaderImg=document.querySelector(".msgr-main-content-chatbox-header > img"),contentChatboxHeaderDetailsH4=document.querySelector(".msgr-main-content-chatbox-header-details > h4"),contentChatboxList=document.querySelector(".msgr-main-content-chatbox-list > .os-padding > .os-viewport > .os-content"),contentChatboxInput=document.querySelector(".msgr-main-content-chatbox-input"),contentChatboxInputBox=document.querySelector("#content-chatbox-input-box"),btnChatboxPhoto=document.querySelector("#btn-chatbox-photo"),btnChatboxFile=document.querySelector("#btn-chatbox-file"),btnChatboxEmoji=document.querySelector("#btn-chatbox-emoji"),btnChatboxSend=document.querySelector("#btn-chatbox-send"),swal.mixin({input:"text",confirmButtonText:"Next &rarr;",progressSteps:["1","2"],showCloseButton:!1,allowOutsideClick:!1,showCancelButton:!1}).queue(["Enter ID","Enter Name"]).then(t=>{const e=t.value.filter(t=>t);void 0!==e&&0!=e.length&&(id=t.value[0],name=t.value[1],axios.get(`${BASE_URL}/api/member/${id}?expand=threads`).then(t=>{const e=t.data.threads.map(t=>`\n                        <div class="msgr-sidebar-list-item" onClick="connect(this, '${t.id}', '${t.type}')">\n                            <div class="msgr-sidebar-list-item-content">\n                                <img class="img-circle" src="/img/${"GROUP"==t.type?"3":"M"==t.sex?"1":"2"}.png" alt="User image">                        \n                                <div class="msgr-sidebar-list-item-content-details">\n                                    <h4>${t.name}</h4>\n                                    <p>${t.message?t.message.latest:"-"}</p>\n                                </div>\n                            </div>\n            \n                            <div class="msgr-sidebar-list-item-settings">\n                                <span>${t.message?moment(t.message.time).format("ddd"):"-"}</span>\n                                <button type="button" id="btn-list-item-setting" class="btn btn-default btn-sm">\n                                    <i class="fa fa-cog fa-fw"></i>\n                                </button>\n                            </div>\n                        </div>\n                    `).join("");sidebarList.innerHTML=e,OverlayScrollbars(sidebarList,{})}),initConn(id,name),contentChatboxInputBox.addEventListener("keydown",t=>{if(13===t.keyCode&&!t.shiftKey){t.preventDefault();const e=moment().format("MMM DD, YYYY, hh:mm a"),n=t.target.value;"GROUP"==mConn.type&&GROUP.emit("chat",{cId:mConn.id,uId:id,message:n,timestamp:e}),SIMPLE.emit("chat",{cId:mConn.id,uId:id,message:n,timestamp:e})}}))})});