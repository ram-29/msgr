const SOCKET_URL="http://localhost:1337";let btnHeaderSetting,btnHeaderMessage,sidebarList,mainHeader,contentChatboxHeader,contentChatboxList,contentChatboxInput,contentChatboxInputBox,btnChatboxPhoto,btnChatboxFile,btnChatboxEmoji,btnChatboxSend,cMsg,btnDetailsHamburg,btnEmployeeSearch,inputChatSearch,inputEmployeeSearch,id,name,SIMPLE,GROUP;const fileTypes=["application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/msword","application/vnd.ms-excel","application/vnd.ms-powerpoint","application/vnd.sun.xml.writer","application/vnd.sun.xml.writer.global","application/vnd.sun.xml.calc","application/vnd.sun.xml.impress","application/pdf","text/plain"],initUpload=(t,e)=>{const n=`filepond-${e.toLowerCase()}`;swal({title:`Upload your ${"IMG"===e?"image/s":"file/s"} here ..`,html:`<input id="${n}" type="file" class="filepond" name="${n}" multiple data-max-files="10"/>`,showCloseButton:!0,showCancelButton:!1,showConfirmButton:!0,focusConfirm:!1,allowOutsideClick:!1,customClass:"mSwal",confirmButtonText:'Upload all <i class="fa fa-upload"></i>',showLoaderOnConfirm:!0,allowOutsideClick:t=>!Swal.isLoading(),preConfirm:async t=>a.getFiles().length?(swal.resetValidationMessage(),a.processFiles()):swal.showValidationMessage("Should have enough files first.")}).then(t=>{});const a=FilePond.create(document.querySelector(`#${n}`),{acceptedFileTypes:"IMG"===e?["image/*"]:fileTypes,instantUpload:!1,server:{url:null,process:(e,n,a,i,o,s,l)=>{switch(i("OK"),t.getAttribute("data-conn")){case"SIMPLE":const e=new SocketIOFileUpload(SIMPLE);e.addEventListener("start",function(t){t.file.meta={threadId:mConn.cId,memberId:id,fileType:n.type,createdAt:moment().format("YYYY-MM-DD HH:mm:ss")}}),e.submitFiles([new File([n],n.name)]);break;case"GROUP":const a=new SocketIOFileUpload(GROUP);a.addEventListener("start",function(t){t.file.meta={threadId:mConn.cId,memberId:id,fileType:n.type,createdAt:moment().format("YYYY-MM-DD HH:mm:ss")}}),a.submitFiles([new File([n],n.name)])}return{abort:()=>{request.abort(),l()}}}}})},buildURLQuery=t=>Object.entries(t).map(t=>t.map(encodeURIComponent).join("=")).join("&"),initUI=t=>{const e=t.firstElementChild.children[0].src;contentChatboxHeaderImg.setAttribute("src",e);const n=t.firstElementChild.children[1].children[0].textContent;mainHeaderDetailsH4.textContent=n,contentChatboxHeaderDetailsH4.textContent=n,cMsg=t.firstElementChild.children[1].children[1],contentChatboxInput.children[0].style.visibility="visible",contentChatboxInput.children[1].style.visibility="visible"},initConn=(t,e)=>{const n=buildURLQuery({id:t,name:e});(SIMPLE=io(`${SOCKET_URL}/simple`,{query:n})).on("connect",t=>{console.log("You connected to Private Messaging")}),SIMPLE.on("chat",e=>{const{uId:n,message:a,timestamp:i}=e,o=contentChatboxHeaderImg.getAttribute("src"),s=moment(i).format("MMM DD, YYYY"),l=moment(i).format("hh:mm a"),r=contentChatboxList.lastElementChild.firstElementChild.firstElementChild,c=contentChatboxList.lastElementChild.firstElementChild.lastElementChild,m=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span class="${r.textContent==s&&c.textContent==l?"stamp-hide":""}">\n                    <span class="${r.textContent==s?"stamp-hide":""}">${s}</span> \n                    <span class="${c.textContent==l?"stamp-hide":""}">${l}</span>\n                </span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===t?"owner":""}">\n                    <img class="img-circle" src="${o}" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${a.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;cMsg.textContent=strTruncate(a,20),contentChatboxList.insertAdjacentHTML("beforeend",m),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),SIMPLE.on("file",async e=>{const{member_id:n,filename:a,filepath:i,type:o,created_at:s}=e,l=contentChatboxHeaderImg.getAttribute("src"),r=moment(s).format("MMM DD, YYYY"),c=moment(s).format("hh:mm a"),m=contentChatboxList.lastElementChild.firstElementChild.firstElementChild,d=contentChatboxList.lastElementChild.firstElementChild.lastElementChild,h=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span class="${m.textContent==r&&d.textContent==c?"stamp-hide":""}">\n                    <span class="${m.textContent==r?"stamp-hide":""}">${r}</span>\n                    <span class="${d.textContent==c?"stamp-hide":""}">${c}</span>\n                </span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===t?"owner":""}">\n                    <img class="img-circle" src="${l}" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        ${"image"===o?`<img src="${i}" alt="${a}" style="border: 1.5rem solid #09f; border-radius: 2.5rem; max-width:70%;">`:`<p><a href="${i}" target="_blank" style="color:#fff !important; text-decoration:underline;">${a}</a></p>`}\n                    </div>\n                </div>\n            </div>\n        `;if("image"===o){const t=$("#tab-image");t.nanogallery2("destroy");const e=await axios.get(`${BK_URL}/api/thread/${mConn.cId}?expand=images`);t.nanogallery2({items:e.data.images.map(t=>{if(t.file_path)return{src:t.file_path,srct:t.file_thumb,title:t.file_name}}),thumbnailWidth:"auto",thumbnailHeight:100})}else{const t=$("#tab-docs");t.html(""),(await axios.get(`${BK_URL}/api/thread/${mConn.cId}?expand=docs`)).data.docs.map(e=>{t.append(`\n                    <li style="margin: 1rem 0;">\n                        <a href="${e.file_path}" target="_blank" style="text-decoration:underline;" title="${e.file_name}">${e.file_name}</a> <br/>\n                        <span class="label label-default">${moment(e.created_at).format("MMM DD, YYYY hh:mm a")}</span>\n                    </li>\n                `)})}cMsg.textContent=strTruncate("image"===o?"Sent an image.":"Sent a document.",20),contentChatboxList.insertAdjacentHTML("beforeend",h),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),SIMPLE.on("disconnect",t=>{console.log("Disconnected to PM"),SIMPLE.disconnect()}),(GROUP=io(`${SOCKET_URL}/group`,{query:n})).on("connect",t=>{console.log("You connected to Group Messaging")}),GROUP.on("chat",e=>{const{uId:n,message:a,timestamp:i}=e,o=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${i}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===t?"owner":""}">\n                    <img class="img-circle" src="/img/1.png" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${a.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",o),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),GROUP.on("disconnect",t=>{console.log("Disconnected to GM"),GROUP.disconnect()})},renderUI=async t=>{if(1==contentChatboxList.children.length){(await axios.get(`${BK_URL}/api/thread/${t}?expand=messages`)).data.messages.map(t=>{let e;const n=contentChatboxHeaderImg.getAttribute("src"),a=moment(t.created_at).format("MMM DD, YYYY"),i=moment(t.created_at).format("hh:mm a"),o=contentChatboxList.lastElementChild.firstElementChild.firstElementChild,s=contentChatboxList.lastElementChild.firstElementChild.lastElementChild;t.text?(e=`\n                    <div class="msgr-main-content-chatbox-list-item">\n                        <span class="${o.textContent==a&&s.textContent==i?"stamp-hide":""}">\n                            <span class="${o.textContent==a?"stamp-hide":""}">${a}</span> \n                            <span class="${s.textContent==i?"stamp-hide":""}">${i}</span>\n                        </span>\n\n                        <div class="msgr-main-content-chatbox-list-item-details ${t.member_id===id?"owner":""}">\n                            <img class="img-circle" src="${n}" alt="User image">\n                            <div class="msgr-main-content-chatbox-list-item-details-content">\n                                <p>${t.text}</p>\n                            </div>\n                        </div>\n                    </div>\n                `,contentChatboxList.insertAdjacentHTML("beforeend",e),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollTop+10*contentChatboxList.parentNode.scrollHeight):(e=`\n                    <div class="msgr-main-content-chatbox-list-item">\n                        <span class="${o.textContent==a&&s.textContent==i?"stamp-hide":""}">\n                            <span class="${o.textContent==a?"stamp-hide":""}">${a}</span> \n                            <span class="${s.textContent==i?"stamp-hide":""}">${i}</span>\n                        </span>\n\n                        <div class="msgr-main-content-chatbox-list-item-details ${t.member_id===id?"owner":""}">\n                            <img class="img-circle" src="${n}" alt="User image">\n                            <div class="msgr-main-content-chatbox-list-item-details-content">\n                                ${"image"===t.file_type?`<img src="${t.file_thumb}" alt="${t.file_name}" style="border: 1.5rem solid #09f; border-radius: 2.5rem; max-width:70%;">`:`<p><a href="${t.file_path}" target="_blank" style="color:#fff !important; text-decoration:underline;">${t.file_name}</a></p>`}\n                            </div>\n                        </div>\n                    </div>\n                `,contentChatboxList.insertAdjacentHTML("beforeend",e),$(".msgr-main-content-chatbox-list").overlayScrollbars().scroll({y:"100%"}))}),btnChatboxPhoto.setAttribute("data-conn","SIMPLE"),btnChatboxFile.setAttribute("data-conn","SIMPLE");const e=$("#tab-image");e.nanogallery2("destroy");const n=await axios.get(`${BK_URL}/api/thread/${t}?expand=images`);e.nanogallery2({items:n.data.images.map(t=>{if(t.file_path)return{src:t.file_path,srct:t.file_thumb,title:t.file_name}}),thumbnailWidth:"auto",thumbnailHeight:100});const a=$("#tab-docs");a.html(""),(await axios.get(`${BK_URL}/api/thread/${t}?expand=docs`)).data.docs.map(t=>{a.append(`\n                <li style="margin: 1rem 0;">\n                    <a href="${t.file_path}" target="_blank" style="text-decoration:underline;" title="${t.file_name}">${t.file_name}</a> <br/>\n                    <span class="label label-default">${moment(t.created_at).format("MMM DD, YYYY hh:mm a")}</span>\n                </li>\n            `)})}};let mConn={};const connect=async(t,e,n)=>{switch(n){case"SIMPLE":if(void 0===mConn.cId&&(SIMPLE.emit("join-room",{id:e}),mConn={cId:e,type:"SIMPLE"}),e!==mConn.cId){SIMPLE.emit("join-room",{id:e}),mConn={cId:e,type:"SIMPLE"},$("#spinner-container").removeClass("spinner-show").addClass("spinner-hide");for(const t of $(contentChatboxList).children().splice(1,$(contentChatboxList).children().length))$(t).remove();renderUI(mConn.cId)}else renderUI(mConn.cId);break;case"GROUP":if(void 0===mConn.cId&&(GROUP.emit("join-room",{id:e}),mConn={cId:e,type:"GROUP"}),e!==mConn.cId){GROUP.emit("join-room",{id:e}),mConn={cId:e,type:"GROUP"},$("#spinner-container").removeClass("spinner-show").addClass("spinner-hide");for(const t of $(contentChatboxList).children().splice(1,$(contentChatboxList).children().length))$(t).remove();renderUI(mConn.cId)}else renderUI(mConn.cId)}initUI(t)},groupConfirm=t=>{const e=t.parentElement.previousElementSibling.children[1].children[0],n=e.dataset.id,a=e.textContent,i=[{member_id:id,role:"ADMIN"},{member_id:n,role:"MEMBER"}];swal({width:"50rem",type:"question",title:"Please choose an option",focusConfirm:!1,showCloseButton:!0,showCancelButton:!0,showConfirmButton:!0,allowOutsideClick:!1,confirmButtonColor:"#5cb85c",confirmButtonText:`\n            <i class="fa fa-user-plus fa-2x" aria-hidden="true"></i>\n            <br/>Add <strong>${a}</strong> <br/>to a New Group\n        `,confirmButtonAriaLabel:"Add to New Group",cancelButtonColor:"#337ab7",cancelButtonText:`\n            <i class="fa fa-users fa-2x" aria-hidden="true"></i>\n            <br/>Add <strong>${a}</strong> <br/>to an Existing Group\n        `,cancelButtonAriaLabel:"Add to an Existing Group"}).then(t=>{t.value?swal({title:"Please specify a group name",input:"text",inputAttributes:{autocapitalize:"off"},confirmButtonText:"Submit",showLoaderOnConfirm:!0,preConfirm:t=>{if(t)return fetch(`${BK_URL}/api/thread`,{method:"POST",body:JSON.stringify({type:"GROUP",name:t,members:i}),headers:{Accept:"application/json","Content-Type":"application/json"}}).then(async e=>{if(!e.ok)throw new Error(e.statusText);const n=await e.json();return n.result=t,n.members=i,n}).catch(t=>{Swal.showValidationMessage(`Request failed: ${t}`)});Swal.showValidationMessage("Please specify a group name")},allowOutsideClick:()=>!Swal.isLoading()}).then(t=>{console.log(t)}):console.log("Existing Group")})};document.addEventListener("DOMContentLoaded",async t=>{FilePond.registerPlugin(FilePondPluginImageCrop,FilePondPluginImageEdit,FilePondPluginImageExifOrientation,FilePondPluginImagePreview,FilePondPluginImageResize,FilePondPluginImageTransform,FilePondPluginImageValidateSize,FilePondPluginFileEncode,FilePondPluginFileMetadata,FilePondPluginFilePoster,FilePondPluginFileRename,FilePondPluginFileValidateSize,FilePondPluginFileValidateType),btnHeaderSetting=document.querySelector("#btn-header-setting"),btnHeaderMessage=document.querySelector("#btn-header-message"),sidebarList=document.querySelector(".msgr-sidebar-list"),mainHeaderDetailsH4=document.querySelector(".msgr-main-header-details > h4"),contentChatboxHeaderImg=document.querySelector(".msgr-main-content-chatbox-header > img"),contentChatboxHeaderDetailsH4=document.querySelector(".msgr-main-content-chatbox-header-details > h4"),contentChatboxList=document.querySelector(".msgr-main-content-chatbox-list > .os-padding > .os-viewport > .os-content"),contentChatboxInput=document.querySelector(".msgr-main-content-chatbox-input"),contentChatboxInputBox=document.querySelector("#content-chatbox-input-box"),btnChatboxPhoto=document.querySelector("#btn-chatbox-photo"),btnChatboxFile=document.querySelector("#btn-chatbox-file"),btnChatboxEmoji=document.querySelector("#btn-chatbox-emoji"),btnChatboxSend=document.querySelector("#btn-chatbox-send"),btnDetailsHamburg=document.querySelector("#btn-details-hamburg"),btnEmployeeSearch=document.querySelector("#btn-employee-search"),inputChatSearch=document.querySelector("#input-chat-search"),inputEmployeeSearch=document.querySelector("#input-employee-search");const e=document.querySelector(".msgr-main-content-tools-user-header-container"),n=document.querySelector("#input-chat-search-container");let a=!1;btnDetailsHamburg.addEventListener("click",t=>{a?(a=!1,$(".msgr-main-content-chatbox").css("width","75%"),$(".msgr-main-content-tools").css("display","block")):(a=!0,$(".msgr-main-content-chatbox").css("width","100%"),$(".msgr-main-content-tools").css("display","none"))}),inputChatSearch.addEventListener("input",t=>{}),inputEmployeeSearch.addEventListener("input",t=>{}),inputEmployeeSearch.addEventListener("focusout",t=>{e.style.display="flex",n.style.display="none",inputEmployeeSearch.value=""}),btnEmployeeSearch.addEventListener("click",t=>{e.style.display="none",n.style.display="flex",inputEmployeeSearch.focus()}),swal.mixin({input:"text",confirmButtonText:"Next &rarr;",progressSteps:["1","2"],showCloseButton:!1,allowOutsideClick:!1,showCancelButton:!1}).queue(["Enter ID","Enter Name"]).then(async t=>{const e=t.value.filter(t=>t);void 0!==e&&0!=e.length&&(id="f9c159af-6f58-441d-b26f-a6ab4b497eaf",name="Maria Powell",axios.get(`${BK_URL}/api/member/${id}?expand=threads`).then(t=>{const e=t.data.threads.map(t=>{return`\n                        <div class="msgr-sidebar-list-item" onClick="connect(this, '${t.id}', '${t.type}')">\n                            <div class="msgr-sidebar-list-item-content">\n                                <img class="img-circle" src="/img/${"GROUP"==t.type?"3":"M"==t.sex?"1":"2"}.png" alt="User image">                        \n                                <div class="msgr-sidebar-list-item-content-details">\n                                    <h4>${t.name}</h4>\n                                    <p>${t.message?strTruncate(t.message.latest,20):"-"}</p>\n                                </div>\n                            </div>\n            \n                            <div class="msgr-sidebar-list-item-settings">\n                                <span>${t.message?moment(t.message.time).format("ddd"):"-"}</span>\n                            </div>\n                        </div>\n                    `}).join("");sidebarList.innerHTML=e,OverlayScrollbars(sidebarList,{})}),initConn(id,name),contentChatboxInputBox.addEventListener("keydown",t=>{if(13===t.keyCode&&!t.shiftKey){t.preventDefault();const e=moment().format("YYYY-MM-DD HH:mm:ss"),n=t.target.value;n&&("GROUP"==mConn.type&&GROUP.emit("chat",{cId:mConn.cId,uId:id,message:n,timestamp:e}),SIMPLE.emit("chat",{cId:mConn.cId,uId:id,message:n,timestamp:e}),contentChatboxInputBox.value="")}}))})});