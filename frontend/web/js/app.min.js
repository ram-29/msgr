const SOCKET_URL="http://localhost:1337";let btnHeaderSetting,btnHeaderMessage,sidebarList,mainHeader,contentChatboxHeader,contentChatboxList,contentChatboxInput,contentChatboxInputBox,btnChatboxPhoto,btnChatboxFile,btnChatboxEmoji,btnChatboxSend;const initUpload=e=>{swal({title:"Upload files here ..",html:'<input id="filepond" type="file" class="filepond" name="filepond" multiple data-max-files="10"/>',showCloseButton:!0,showCancelButton:!1,showConfirmButton:!0,focusConfirm:!1,allowOutsideClick:!1,customClass:"mSwal",confirmButtonText:'Upload all <i class="fa fa-upload"></i>',showLoaderOnConfirm:!0,allowOutsideClick:e=>!Swal.isLoading(),preConfirm:async e=>t.getFiles().length?(swal.resetValidationMessage(),t.processFiles()):swal.showValidationMessage("Should have enough files first.")}).then(e=>{});const t=FilePond.create(document.querySelector("#filepond"),{instantUpload:!1,server:{url:null,process:(t,n,o,i,a,s,l)=>{switch(i("OK"),e.getAttribute("data-conn")){case"SIMPLE":new SocketIOFileUpload(SIMPLE).submitFiles([new File([n],n.name)]);break;case"GROUP":new SocketIOFileUpload(GROUP).submitFiles([new File([n],n.name)])}return{abort:()=>{request.abort(),l()}}}}})},buildURLQuery=e=>Object.entries(e).map(e=>e.map(encodeURIComponent).join("=")).join("&"),initUI=e=>{const t=e.firstElementChild.children[0].src;contentChatboxHeaderImg.setAttribute("src",t);const n=e.firstElementChild.children[1].children[0].textContent;mainHeaderDetailsH4.textContent=n,contentChatboxHeaderDetailsH4.textContent=n,contentChatboxInput.children[0].style.visibility="visible",contentChatboxInput.children[1].style.visibility="visible"};let id,name,SIMPLE,GROUP;const initConn=(e,t)=>{const n=buildURLQuery({id:e,name:t});(SIMPLE=io(`${SOCKET_URL}/simple`,{query:n})).on("connect",e=>{console.log("You connected to Private Messaging")}),SIMPLE.on("chat",t=>{const{uId:n,message:o,timestamp:i}=t,a=contentChatboxHeaderImg.getAttribute("src"),s=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${i}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===e?"owner":""}">\n                    <img class="img-circle" src="${a}" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${o.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",s),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),SIMPLE.on("disconnect",e=>{console.log("Disconnected to PM"),SIMPLE.disconnect()}),(GROUP=io(`${SOCKET_URL}/group`,{query:n})).on("connect",e=>{console.log("You connected to Group Messaging")}),GROUP.on("chat",t=>{const{uId:n,message:o,timestamp:i}=t,a=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${i}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===e?"owner":""}">\n                    <img class="img-circle" src="/img/1.png" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${o.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",a),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),GROUP.on("disconnect",e=>{console.log("Disconnected to GM"),GROUP.disconnect()})};let mConn={};const connect=(e,t,n)=>{switch(n){case"SIMPLE":SIMPLE.emit("join-room",{id:t}),mConn={id:t,type:"SIMPLE"},btnChatboxPhoto.setAttribute("data-conn","SIMPLE");break;case"GROUP":GROUP.emit("join-room",{id:t}),mConn={id:t,type:"GROUP"},btnChatboxPhoto.setAttribute("data-conn","GROUP")}initUI(e)},groupConfirm=e=>{const t=e.parentElement.previousElementSibling.children[1].children[0],n=t.dataset.id,o=t.textContent,i=[{member_id:id,role:"ADMIN"},{member_id:n,role:"MEMBER"}];swal({width:"50rem",type:"question",title:"Please choose an option",focusConfirm:!1,showCloseButton:!0,showCancelButton:!0,showConfirmButton:!0,allowOutsideClick:!1,confirmButtonColor:"#5cb85c",confirmButtonText:`\n            <i class="fa fa-user-plus fa-2x" aria-hidden="true"></i>\n            <br/>Add <strong>${o}</strong> <br/>to a New Group\n        `,confirmButtonAriaLabel:"Add to New Group",cancelButtonColor:"#337ab7",cancelButtonText:`\n            <i class="fa fa-users fa-2x" aria-hidden="true"></i>\n            <br/>Add <strong>${o}</strong> <br/>to an Existing Group\n        `,cancelButtonAriaLabel:"Add to an Existing Group"}).then(e=>{e.value?swal({title:"Please specify a group name",input:"text",inputAttributes:{autocapitalize:"off"},confirmButtonText:"Submit",showLoaderOnConfirm:!0,preConfirm:e=>{if(e)return fetch(`${BK_URL}/api/thread`,{method:"POST",body:JSON.stringify({type:"GROUP",name:e,members:i}),headers:{Accept:"application/json","Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw new Error(t.statusText);const n=await t.json();return n.result=e,n.members=i,n}).catch(e=>{Swal.showValidationMessage(`Request failed: ${e}`)});Swal.showValidationMessage("Please specify a group name")},allowOutsideClick:()=>!Swal.isLoading()}).then(e=>{console.log(e)}):console.log("Existing Group")})};document.addEventListener("DOMContentLoaded",e=>{FilePond.registerPlugin(FilePondPluginImageCrop,FilePondPluginImageEdit,FilePondPluginImageExifOrientation,FilePondPluginImagePreview,FilePondPluginImageResize,FilePondPluginImageTransform,FilePondPluginImageValidateSize,FilePondPluginFileEncode,FilePondPluginFileMetadata,FilePondPluginFilePoster,FilePondPluginFileRename,FilePondPluginFileValidateSize,FilePondPluginFileValidateType),btnHeaderSetting=document.querySelector("#btn-header-setting"),btnHeaderMessage=document.querySelector("#btn-header-message"),sidebarList=document.querySelector(".msgr-sidebar-list"),mainHeaderDetailsH4=document.querySelector(".msgr-main-header-details > h4"),contentChatboxHeaderImg=document.querySelector(".msgr-main-content-chatbox-header > img"),contentChatboxHeaderDetailsH4=document.querySelector(".msgr-main-content-chatbox-header-details > h4"),contentChatboxList=document.querySelector(".msgr-main-content-chatbox-list > .os-padding > .os-viewport > .os-content"),contentChatboxInput=document.querySelector(".msgr-main-content-chatbox-input"),contentChatboxInputBox=document.querySelector("#content-chatbox-input-box"),btnChatboxPhoto=document.querySelector("#btn-chatbox-photo"),btnChatboxFile=document.querySelector("#btn-chatbox-file"),btnChatboxEmoji=document.querySelector("#btn-chatbox-emoji"),btnChatboxSend=document.querySelector("#btn-chatbox-send"),swal.mixin({input:"text",confirmButtonText:"Next &rarr;",progressSteps:["1","2"],showCloseButton:!1,allowOutsideClick:!1,showCancelButton:!1}).queue(["Enter ID","Enter Name"]).then(e=>{const t=e.value.filter(e=>e);void 0!==t&&0!=t.length&&(id=e.value[0],name=e.value[1],axios.get(`${BK_URL}/api/member/${id}?expand=threads`).then(e=>{const t=e.data.threads.map(e=>`\n                        <div class="msgr-sidebar-list-item" onClick="connect(this, '${e.id}', '${e.type}')">\n                            <div class="msgr-sidebar-list-item-content">\n                                <img class="img-circle" src="/img/${"GROUP"==e.type?"3":"M"==e.sex?"1":"2"}.png" alt="User image">                        \n                                <div class="msgr-sidebar-list-item-content-details">\n                                    <h4>${e.name}</h4>\n                                    <p>${e.message?e.message.latest:"-"}</p>\n                                </div>\n                            </div>\n            \n                            <div class="msgr-sidebar-list-item-settings">\n                                <span>${e.message?moment(e.message.time).format("ddd"):"-"}</span>\n                                <button type="button" id="btn-list-item-setting" class="btn btn-default btn-sm">\n                                    <i class="fa fa-cog fa-fw"></i>\n                                </button>\n                            </div>\n                        </div>\n                    `).join("");sidebarList.innerHTML=t,OverlayScrollbars(sidebarList,{})}),initConn(id,name),contentChatboxInputBox.addEventListener("keydown",e=>{if(13===e.keyCode&&!e.shiftKey){e.preventDefault();const t=moment().format("MMM DD, YYYY, hh:mm a"),n=e.target.value;"GROUP"==mConn.type&&GROUP.emit("chat",{cId:mConn.id,uId:id,message:n,timestamp:t}),SIMPLE.emit("chat",{cId:mConn.id,uId:id,message:n,timestamp:t})}}))})});