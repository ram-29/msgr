const SOCKET_HTTP_URL="http://localhost:1337",SOCKET_HTTPS_URL="http://localhost:7331",FR_HTTP_URL="http://fr.msgr.io",BK_HTTP_URL="http://bk.msgr.io",FR_HTTPS_URL="https://fr.msgr.io",BK_HTTPS_URL="https://bk.msgr.io";let btnHeaderSetting,btnHeaderMessage,sidebarList,mainHeader,contentChatboxHeader,contentChatboxList,contentChatboxInput,contentChatboxInputBox,btnChatboxPhoto,btnChatboxFile,btnChatboxEmoji,btnChatboxSend,cMsg,btnDetailsHamburg,btnEmployeeSearch,inputChatSearch,inputEmployeeSearch,userList,SIMPLE,GROUP;const fileTypes=["application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/msword","application/vnd.ms-excel","application/vnd.ms-powerpoint","application/vnd.sun.xml.writer","application/vnd.sun.xml.writer.global","application/vnd.sun.xml.calc","application/vnd.sun.xml.impress","application/pdf","text/plain"],initSearch=(e,t,n)=>{Array.from(e.getElementsByClassName(t)).forEach(e=>{-1!=e.children[0].children[1].children[0].textContent.toLowerCase().indexOf(n.toLowerCase())?e.style.display="flex":e.style.display="none"})},initUpload=(e,t)=>{const n=`filepond-${t.toLowerCase()}`;swal({title:`Upload your ${"IMG"===t?"image/s":"file/s"} here ..`,html:`<input id="${n}" type="file" class="filepond" name="${n}" multiple data-max-files="10"/>`,showCloseButton:!0,showCancelButton:!1,showConfirmButton:!0,focusConfirm:!1,allowOutsideClick:!1,customClass:"mSwal",confirmButtonText:'Upload all <i class="fa fa-upload"></i>',showLoaderOnConfirm:!0,allowOutsideClick:e=>!Swal.isLoading(),preConfirm:async e=>a.getFiles().length?(swal.resetValidationMessage(),a.processFiles()):swal.showValidationMessage("Should have enough files first.")}).then(e=>{});const a=FilePond.create(document.querySelector(`#${n}`),{acceptedFileTypes:"IMG"===t?["image/*"]:fileTypes,instantUpload:!1,server:{url:null,process:(t,n,a,i,s,o,l)=>{switch(i("OK"),e.getAttribute("data-conn")){case"SIMPLE":const t=new SocketIOFileUpload(SIMPLE);t.addEventListener("start",function(e){e.file.meta={threadId:mConn.cId,memberId:M_ID,fileType:n.type,createdAt:moment().format("YYYY-MM-DD HH:mm:ss")}}),t.submitFiles([new File([n],n.name)]);break;case"GROUP":const a=new SocketIOFileUpload(GROUP);a.addEventListener("start",function(e){e.file.meta={threadId:mConn.cId,memberId:M_ID,fileType:n.type,createdAt:moment().format("YYYY-MM-DD HH:mm:ss")}}),a.submitFiles([new File([n],n.name)])}return{abort:()=>{request.abort(),l()}}}}})},buildURLQuery=e=>Object.entries(e).map(e=>e.map(encodeURIComponent).join("=")).join("&"),initUI=e=>{const t=e.firstElementChild.children[0].src;contentChatboxHeaderImg.setAttribute("src",t);const n=e.firstElementChild.children[1].children[0].textContent;mainHeaderDetailsH4.textContent=n,contentChatboxHeaderDetailsH4.textContent=n,cMsg=e.firstElementChild.children[1].children[1],contentChatboxInput.children[0].style.visibility="visible",contentChatboxInput.children[1].style.visibility="visible"},playSound=e=>{if(M_ID!==e){new Howl({src:[`${FR_HTTPS_URL}/audio/notif.mp3`]}).play()}},initConn=(e,t)=>{const n=buildURLQuery({id:e,name:t});(SIMPLE=io(`${SOCKET_HTTP_URL}/simple`,{query:n,secure:!0})).on("connect",e=>{console.log("You connected to Private Messaging")}),SIMPLE.on("chat",t=>{const{uId:n,message:a,timestamp:i}=JSON.parse(t),s=contentChatboxHeaderImg.getAttribute("src"),o=moment(i).format("MMM DD, YYYY"),l=moment(i).format("hh:mm a"),r=contentChatboxList.lastElementChild.firstElementChild.firstElementChild,c=contentChatboxList.lastElementChild.firstElementChild.lastElementChild,m=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span class="${r.textContent==o&&c.textContent==l?"stamp-hide":""}">\n                    <span class="${r.textContent==o?"stamp-hide":""}">${o}</span> \n                    <span class="${c.textContent==l?"stamp-hide":""}">${l}</span>\n                </span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===e?"owner":""}">\n                    <img class="img-circle" src="${s}" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${a.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;cMsg.textContent=strTruncate(a,20),contentChatboxList.insertAdjacentHTML("beforeend",m),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight,playSound(n)}),SIMPLE.on("file",async t=>{const{member_id:n,filename:a,filepath:i,type:s,created_at:o}=t,l=contentChatboxHeaderImg.getAttribute("src"),r=moment(o).format("MMM DD, YYYY"),c=moment(o).format("hh:mm a"),m=contentChatboxList.lastElementChild.firstElementChild.firstElementChild,d=contentChatboxList.lastElementChild.firstElementChild.lastElementChild,p=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span class="${m.textContent==r&&d.textContent==c?"stamp-hide":""}">\n                    <span class="${m.textContent==r?"stamp-hide":""}">${r}</span>\n                    <span class="${d.textContent==c?"stamp-hide":""}">${c}</span>\n                </span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===e?"owner":""}">\n                    <img class="img-circle" src="${l}" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        ${"image"===s?`<img src="${i}" alt="${a}" style="border: 1.5rem solid #09f; border-radius: 2.5rem; max-width:70%;">`:`<p><a href="${i}" target="_blank" style="color:#fff !important; text-decoration:underline;">${a}</a></p>`}\n                    </div>\n                </div>\n            </div>\n        `;if("image"===s){const e=$("#tab-image");e.nanogallery2("destroy");const t=await axios.get(`${BK_HTTPS_URL}/api/thread/${mConn.cId}?expand=images`);e.nanogallery2({items:t.data.images.map(e=>{if(e.file_path)return{src:e.file_path,srct:e.file_thumb,title:e.file_name}}),thumbnailWidth:"auto",thumbnailHeight:100})}else{const e=$("#tab-docs");e.html(""),(await axios.get(`${BK_HTTPS_URL}/api/thread/${mConn.cId}?expand=docs`)).data.docs.map(t=>{e.append(`\n                    <li style="margin: 1rem 0;">\n                        <a href="${t.file_path}" target="_blank" style="text-decoration:underline;" title="${t.file_name}">${t.file_name}</a> <br/>\n                        <span class="label label-default">${moment(t.created_at).format("MMM DD, YYYY hh:mm a")}</span>\n                    </li>\n                `)})}cMsg.textContent=strTruncate("image"===s?"You sent an image.":"You sent a document.",20),contentChatboxList.insertAdjacentHTML("beforeend",p),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),SIMPLE.on("disconnect",e=>{console.log("Disconnected to PM"),SIMPLE.disconnect()}),(GROUP=io(`${SOCKET_HTTP_URL}/group`,{query:n})).on("connect",e=>{console.log("You connected to Group Messaging")}),GROUP.on("chat",t=>{const{uId:n,message:a,timestamp:i}=JSON.parse(t),s=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${i}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===e?"owner":""}">\n                    <img class="img-circle" src="/img/1.png" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${a.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",s),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),GROUP.on("disconnect",e=>{console.log("Disconnected to GM"),GROUP.disconnect()})},renderUI=async e=>{if(1==contentChatboxList.children.length){const t=await axios.get(`${BK_HTTPS_URL}/api/thread/${e}?expand=messages`);t.data.messages.map(e=>{let n;const a=contentChatboxHeaderImg.getAttribute("src"),i=moment(e.created_at).format("MMM DD, YYYY"),s=moment(e.created_at).format("hh:mm a"),o=contentChatboxList.lastElementChild.firstElementChild.firstElementChild,l=contentChatboxList.lastElementChild.firstElementChild.lastElementChild,{id:r,name:c,sex:m}=e.member;e.text?(n=`\n                    <div class="msgr-main-content-chatbox-list-item">\n                        <span class="${o.textContent==i&&l.textContent==s?"stamp-hide":""}">\n                            <span class="${o.textContent==i?"stamp-hide":""}">${i}</span> \n                            <span class="${l.textContent==s?"stamp-hide":""}">${s}</span>\n                        </span>\n\n                        <p style="display: ${"GROUP"==t.data.type?r===M_ID?"none;":"block;":"none;"} color:#999; margin:0 0 .5rem;">${c}</p>\n                        <div class="msgr-main-content-chatbox-list-item-details ${r===M_ID?"owner":""}">\n                            <img class="img-circle" src="${"GROUP"==t.data.type?"M"==m?"/img/1.png":"/img/2.png":a}" alt="User image">\n                            <div class="msgr-main-content-chatbox-list-item-details-content">\n                                <p>${e.text}</p>\n                            </div>\n                        </div>\n                    </div>\n                `,contentChatboxList.insertAdjacentHTML("beforeend",n),$(".msgr-main-content-chatbox-list").overlayScrollbars().scroll({y:"100%"})):(n=`\n                    <div class="msgr-main-content-chatbox-list-item">\n                        <span class="${o.textContent==i&&l.textContent==s?"stamp-hide":""}">\n                            <span class="${o.textContent==i?"stamp-hide":""}">${i}</span> \n                            <span class="${l.textContent==s?"stamp-hide":""}">${s}</span>\n                        </span>\n\n                        <p style="display: ${"GROUP"==t.data.type?r===M_ID?"none;":"block;":"none;"} color:#999; margin:0 0 .5rem;">${c}</p>\n                        <div class="msgr-main-content-chatbox-list-item-details ${r===M_ID?"owner":""}">\n                            <img class="img-circle" src="${"GROUP"==t.data.type?"M"==m?"/img/1.png":"/img/2.png":a}" alt="User image">\n                            <div class="msgr-main-content-chatbox-list-item-details-content">\n                                ${"image"===e.file_type?`<img src="${e.file_thumb}" alt="${e.file_name}" style="border: 1.5rem solid #09f; border-radius: 2.5rem; max-width:70%;">`:`<p><a href="${e.file_path}" target="_blank" style="color: ${r===M_ID?"#fff":"#0099ff"} !important; text-decoration:underline;">${e.file_name}</a></p>`}\n                            </div>\n                        </div>\n                    </div>\n                `,contentChatboxList.insertAdjacentHTML("beforeend",n),$(".msgr-main-content-chatbox-list").overlayScrollbars().scroll({y:"100%"}))}),btnChatboxPhoto.setAttribute("data-conn","SIMPLE"),btnChatboxFile.setAttribute("data-conn","SIMPLE");const n=$("#tab-image");n.nanogallery2("destroy");const a=await axios.get(`${BK_HTTPS_URL}/api/thread/${e}?expand=images`);n.nanogallery2({items:a.data.images.map(e=>{if(e.file_path)return{src:e.file_path,srct:e.file_thumb,title:e.file_name}}),thumbnailWidth:"auto",thumbnailHeight:100});const i=$("#tab-docs");i.html(""),(await axios.get(`${BK_HTTPS_URL}/api/thread/${e}?expand=docs`)).data.docs.map(e=>{i.append(`\n                <li style="margin: 1rem 0;">\n                    <a href="${e.file_path}" target="_blank" style="text-decoration:underline;" title="${e.file_name}">${e.file_name}</a> <br/>\n                    <span class="label label-default">${moment(e.created_at).format("MMM DD, YYYY hh:mm a")}</span>\n                </li>\n            `)})}};let mConn={};const connect=async(e,t,n)=>{switch(n){case"SIMPLE":if(void 0===mConn.cId&&(SIMPLE.emit("join-room",{id:t}),mConn={cId:t,type:"SIMPLE"}),t!==mConn.cId){SIMPLE.emit("join-room",{id:t}),mConn={cId:t,type:"SIMPLE"},$("#spinner-container").removeClass("spinner-show").addClass("spinner-hide");for(const e of $(contentChatboxList).children().splice(1,$(contentChatboxList).children().length))$(e).remove();renderUI(mConn.cId)}else renderUI(mConn.cId);break;case"GROUP":if(void 0===mConn.cId&&(GROUP.emit("join-room",{id:t}),mConn={cId:t,type:"GROUP"}),t!==mConn.cId){GROUP.emit("join-room",{id:t}),mConn={cId:t,type:"GROUP"},$("#spinner-container").removeClass("spinner-show").addClass("spinner-hide");for(const e of $(contentChatboxList).children().splice(1,$(contentChatboxList).children().length))$(e).remove();renderUI(mConn.cId)}else renderUI(mConn.cId)}initUI(e)},chatConfirm=e=>{e.style.display="none";const t=e.parentElement.previousElementSibling.children[1].children[0],n=e.parentElement.previousElementSibling.children[0],a=t.dataset.id,i=t.textContent,s=n.src,o=[{member_id:M_ID,role:"ADMIN"},{member_id:a,role:"MEMBER"}];axios.post(`${BK_HTTPS_URL}/api/thread`,{type:"SIMPLE",name:`${M_NAME}:${i}`,members:o}).then(e=>{const t=`\n            <div class="msgr-sidebar-list-item" onclick="connect(this, '${e.data.id}', 'SIMPLE')">\n                <div class="msgr-sidebar-list-item-content">\n                    <img class="img-circle" src="${s}" alt="User image">                        \n                    <div class="msgr-sidebar-list-item-content-details">\n                        <h4>${i}</h4>\n                        <p>-</p>\n                    </div>\n                </div>\n\n                <div class="msgr-sidebar-list-item-settings">\n                    <span>-</span>\n                </div>\n            </div>\n        `;$(".msgr-sidebar-list > .os-padding > .os-viewport > .os-content").prepend(t)}).catch(e=>console.error(e))},groupConfirm=e=>{const t=e.parentElement.previousElementSibling.children[1].children[0],n=t.dataset.id,a=t.textContent,i=[{member_id:M_ID,role:"ADMIN"},{member_id:n,role:"MEMBER"}];swal({width:"50rem",type:"question",title:"Please choose an option",focusConfirm:!1,showCloseButton:!0,showCancelButton:!0,showConfirmButton:!0,allowOutsideClick:!1,confirmButtonColor:"#5cb85c",confirmButtonText:`\n            <i class="fa fa-user-plus fa-2x" aria-hidden="true"></i>\n            <br/>Add <strong>${a}</strong> <br/>to a New Group\n        `,confirmButtonAriaLabel:"Add to New Group",cancelButtonColor:"#337ab7",cancelButtonText:`\n            <i class="fa fa-users fa-2x" aria-hidden="true"></i>\n            <br/>Add <strong>${a}</strong> <br/>to an Existing Group\n        `,cancelButtonAriaLabel:"Add to an Existing Group"}).then(e=>{e.value?swal({title:"Please specify a group name",input:"text",inputAttributes:{autocapitalize:"off"},confirmButtonText:"Submit",showLoaderOnConfirm:!0,preConfirm:e=>{if(e)return fetch(`${BK_HTTPS_URL}/api/thread`,{method:"POST",body:JSON.stringify({type:"GROUP",name:e,members:i}),headers:{Accept:"application/json","Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw new Error(t.statusText);const n=await t.json();return n.result=e,n.members=i,n}).catch(e=>{Swal.showValidationMessage(`Request failed: ${e}`)});Swal.showValidationMessage("Please specify a group name")},allowOutsideClick:()=>!Swal.isLoading()}).then(e=>{console.log(e)}):console.log("Existing Group")})};document.addEventListener("DOMContentLoaded",async e=>{if("serviceWorker"in navigator){console.log("Registering service worker ..");const e=await navigator.serviceWorker.register(`${FR_HTTPS_URL}/js/base/worker.js`),t=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:urlBase64ToUint8Array(PUB_VAPID_KEY)});console.log(t)}else console.log("No service worker found ..");FilePond.registerPlugin(FilePondPluginImageCrop,FilePondPluginImageEdit,FilePondPluginImageExifOrientation,FilePondPluginImagePreview,FilePondPluginImageResize,FilePondPluginImageTransform,FilePondPluginImageValidateSize,FilePondPluginFileEncode,FilePondPluginFileMetadata,FilePondPluginFilePoster,FilePondPluginFileRename,FilePondPluginFileValidateSize,FilePondPluginFileValidateType),btnHeaderSetting=document.querySelector("#btn-header-setting"),btnHeaderMessage=document.querySelector("#btn-header-message"),sidebarList=document.querySelector(".msgr-sidebar-list"),mainHeaderDetailsH4=document.querySelector(".msgr-main-header-details > h4"),contentChatboxHeaderImg=document.querySelector(".msgr-main-content-chatbox-header > img"),contentChatboxHeaderDetailsH4=document.querySelector(".msgr-main-content-chatbox-header-details > h4"),contentChatboxList=document.querySelector(".msgr-main-content-chatbox-list > .os-padding > .os-viewport > .os-content"),contentChatboxInput=document.querySelector(".msgr-main-content-chatbox-input"),contentChatboxInputBox=document.querySelector("#content-chatbox-input-box"),btnChatboxPhoto=document.querySelector("#btn-chatbox-photo"),btnChatboxFile=document.querySelector("#btn-chatbox-file"),btnChatboxEmoji=document.querySelector("#btn-chatbox-emoji"),btnChatboxSend=document.querySelector("#btn-chatbox-send"),btnDetailsHamburg=document.querySelector("#btn-details-hamburg"),btnEmployeeSearch=document.querySelector("#btn-employee-search"),inputChatSearch=document.querySelector("#input-chat-search"),inputEmployeeSearch=document.querySelector("#input-employee-search"),userList=document.querySelector(".msgr-main-content-tools-user-list");const t=document.querySelector(".msgr-main-content-tools-user-header-container"),n=document.querySelector("#input-chat-search-container");let a=!1;btnDetailsHamburg.addEventListener("click",e=>{a?(a=!1,$(".msgr-main-content-chatbox").css("width","75%"),$(".msgr-main-content-tools").css("display","block")):(a=!0,$(".msgr-main-content-chatbox").css("width","100%"),$(".msgr-main-content-tools").css("display","none"))}),inputChatSearch.addEventListener("keyup",e=>initSearch(sidebarList,"msgr-sidebar-list-item",e.target.value)),inputEmployeeSearch.addEventListener("keyup",e=>initSearch(userList,"msgr-main-content-tools-user-list-item",e.target.value)),inputEmployeeSearch.addEventListener("focusout",e=>{t.style.display="flex",n.style.display="none"}),btnEmployeeSearch.addEventListener("click",e=>{t.style.display="none",n.style.display="flex",inputEmployeeSearch.focus()}),M_ID&&M_NAME&&(axios.get(`${BK_HTTPS_URL}/api/member/${M_ID}?expand=threads`,{headers:{"Access-Control-Allow-Origin":"*"}}).then(e=>{const t=e.data.threads.map(e=>(Array.from(userList.getElementsByClassName("msgr-main-content-tools-user-list-item")).forEach(t=>{t.children[0].children[1].children[0].textContent.toLowerCase()==e.name.toLowerCase()&&(t.children[1].children[0].style.display="none")}),`\n                    <div class="msgr-sidebar-list-item" onClick="connect(this, '${e.id}', '${e.type}')">\n                        <div class="msgr-sidebar-list-item-content">\n                            <img class="img-circle" src="${FR_HTTPS_URL}/img/${"GROUP"==e.type?"3":"M"==e.sex?"1":"2"}.png" alt="User image">                        \n                            <div class="msgr-sidebar-list-item-content-details">\n                                <h4 style="font-weight: ${e.message&&e.message.unread&&M_ID!==e.message.sent_by?"bold;":"normal;"}">${e.name}</h4>\n                                <p style="font-weight: ${e.message&&e.message.unread&&M_ID!==e.message.sent_by?"bold; color:#000;":"normal;"}">${e.message?strTruncate(e.message.latest,20):"-"}</p>\n                            </div>\n                        </div>\n        \n                        <div class="msgr-sidebar-list-item-settings">\n                            <span>${e.message?moment(e.message.time).format("ddd"):"-"}</span>\n                        </div>\n                    </div>\n                `)).join("");sidebarList.innerHTML=t,OverlayScrollbars(sidebarList,{})}),initConn(M_ID,M_NAME),contentChatboxInputBox.addEventListener("keydown",e=>{if(13===e.keyCode&&!e.shiftKey){e.preventDefault();const t=moment().format("YYYY-MM-DD HH:mm:ss"),n=e.target.value;n&&("GROUP"==mConn.type?GROUP.emit("chat",{cId:mConn.cId,uId:M_ID,message:n,timestamp:t}):SIMPLE.emit("chat",{cId:mConn.cId,uId:M_ID,message:n,timestamp:t}),contentChatboxInputBox.value="")}}))});