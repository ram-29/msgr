const SOCKET_URL="http://localhost:1337";let btnHeaderSetting,btnHeaderMessage,sidebarList,mainHeader,contentChatboxHeader,contentChatboxList,contentChatboxInput,contentChatboxInputBox,btnChatboxPhoto,btnChatboxFile,btnChatboxEmoji,btnChatboxSend,id,name,SIMPLE,GROUP;const fileTypes=["application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/msword","application/vnd.ms-excel","application/vnd.ms-powerpoint","application/vnd.sun.xml.writer","application/vnd.sun.xml.writer.global","application/vnd.sun.xml.calc","application/vnd.sun.xml.impress","application/pdf","text/plain"],initUpload=(e,t)=>{const n=`filepond-${t.toLowerCase()}`;swal({title:`Upload your ${"IMG"===t?"image/s":"file/s"} here ..`,html:`<input id="${n}" type="file" class="filepond" name="${n}" multiple data-max-files="10"/>`,showCloseButton:!0,showCancelButton:!1,showConfirmButton:!0,focusConfirm:!1,allowOutsideClick:!1,customClass:"mSwal",confirmButtonText:'Upload all <i class="fa fa-upload"></i>',showLoaderOnConfirm:!0,allowOutsideClick:e=>!Swal.isLoading(),preConfirm:async e=>i.getFiles().length?(swal.resetValidationMessage(),i.processFiles()):swal.showValidationMessage("Should have enough files first.")}).then(e=>{});const i=FilePond.create(document.querySelector(`#${n}`),{acceptedFileTypes:"IMG"===t?["image/*"]:fileTypes,instantUpload:!1,server:{url:null,process:(t,n,i,o,a,s,l)=>{switch(o("OK"),e.getAttribute("data-conn")){case"SIMPLE":const t=new SocketIOFileUpload(SIMPLE);t.addEventListener("start",function(e){e.file.meta={threadId:mConn.cId,memberId:id,fileType:n.type,createdAt:moment().format("YYYY-MM-DD HH:mm:ss")}}),t.submitFiles([new File([n],n.name)]);break;case"GROUP":const i=new SocketIOFileUpload(GROUP);i.addEventListener("start",function(e){e.file.meta={threadId:mConn.cId,memberId:id,fileType:n.type,createdAt:moment().format("YYYY-MM-DD HH:mm:ss")}}),i.submitFiles([new File([n],n.name)])}return{abort:()=>{request.abort(),l()}}}}})},buildURLQuery=e=>Object.entries(e).map(e=>e.map(encodeURIComponent).join("=")).join("&"),initUI=e=>{const t=e.firstElementChild.children[0].src;contentChatboxHeaderImg.setAttribute("src",t);const n=e.firstElementChild.children[1].children[0].textContent;mainHeaderDetailsH4.textContent=n,contentChatboxHeaderDetailsH4.textContent=n,contentChatboxInput.children[0].style.visibility="visible",contentChatboxInput.children[1].style.visibility="visible"},initConn=(e,t)=>{const n=buildURLQuery({id:e,name:t});(SIMPLE=io(`${SOCKET_URL}/simple`,{query:n})).on("connect",e=>{console.log("You connected to Private Messaging")}),SIMPLE.on("chat",t=>{const{uId:n,message:i,timestamp:o}=t,a=contentChatboxHeaderImg.getAttribute("src"),s=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${o}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===e?"owner":""}">\n                    <img class="img-circle" src="${a}" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${i.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",s),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),SIMPLE.on("file",t=>{const{member_id:n,filename:i,filepath:o,type:a,created_at:s}=t,l=contentChatboxHeaderImg.getAttribute("src"),r=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${s}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===e?"owner":""}">\n                    <img class="img-circle" src="${l}" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        ${"image"===a?`<img src="${o}" alt="${i}" style="border: 1.5rem solid #09f; border-radius: 2.5rem; max-width:70%;">`:`<p><a href="${o}" target="_blank" style="color:#fff !important; text-decoration:underline;">${i}</a></p>`}\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",r),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),SIMPLE.on("disconnect",e=>{console.log("Disconnected to PM"),SIMPLE.disconnect()}),(GROUP=io(`${SOCKET_URL}/group`,{query:n})).on("connect",e=>{console.log("You connected to Group Messaging")}),GROUP.on("chat",t=>{const{uId:n,message:i,timestamp:o}=t,a=`\n            <div class="msgr-main-content-chatbox-list-item">\n                <span>${o}</span>\n\n                <div class="msgr-main-content-chatbox-list-item-details ${n===e?"owner":""}">\n                    <img class="img-circle" src="/img/1.png" alt="User image">\n                    <div class="msgr-main-content-chatbox-list-item-details-content">\n                        <p>${i.trim()}</p>\n                    </div>\n                </div>\n            </div>\n        `;contentChatboxList.insertAdjacentHTML("beforeend",a),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),GROUP.on("disconnect",e=>{console.log("Disconnected to GM"),GROUP.disconnect()})},renderUI=async e=>{if(!contentChatboxList.children.length){(await axios.get(`${BK_URL}/api/thread/${e}?expand=messages`)).data.messages.map(e=>{let t;const n=contentChatboxHeaderImg.getAttribute("src");t=e.text?`\n                    <div class="msgr-main-content-chatbox-list-item">\n                        <span>${e.created_at}</span>\n\n                        <div class="msgr-main-content-chatbox-list-item-details ${e.member_id===id?"owner":""}">\n                            <img class="img-circle" src="${n}" alt="User image">\n                            <div class="msgr-main-content-chatbox-list-item-details-content">\n                                <p>${message.text()}</p>\n                            </div>\n                        </div>\n                    </div>\n                `:`\n                    <div class="msgr-main-content-chatbox-list-item">\n                        <span>${e.created_at}</span>\n\n                        <div class="msgr-main-content-chatbox-list-item-details ${e.member_id===id?"owner":""}">\n                            <img class="img-circle" src="${n}" alt="User image">\n                            <div class="msgr-main-content-chatbox-list-item-details-content">\n                                ${"image"===e.file_type?`<img src="${e.file_thumb}" alt="${e.file_name}" style="border: 1.5rem solid #09f; border-radius: 2.5rem; max-width:70%;">`:`<p><a href="${e.file_path}" target="_blank" style="color:#fff !important; text-decoration:underline;">${e.file_name}</a></p>`}\n                            </div>\n                        </div>\n                    </div>\n                `,contentChatboxList.insertAdjacentHTML("beforeend",t),contentChatboxList.parentNode.scrollTop=contentChatboxList.parentNode.scrollHeight}),btnChatboxPhoto.setAttribute("data-conn","SIMPLE"),btnChatboxFile.setAttribute("data-conn","SIMPLE");const t=$("#tab-image");t.nanogallery2("destroy");const n=await axios.get(`${BK_URL}/api/thread/${e}?expand=images`);t.nanogallery2({items:n.data.images.map(e=>{if(e.file_path)return{src:e.file_path,srct:e.file_thumb,title:e.file_name}}),thumbnailWidth:"auto",thumbnailHeight:100});const i=$("#tab-docs");i.html(""),(await axios.get(`${BK_URL}/api/thread/${e}?expand=docs`)).data.docs.map(e=>{i.append(`\n                <li style="margin: 1rem 0;">\n                    <a href="${e.file_path}" target="_blank" style="text-decoration:underline;" title="${e.file_name}">${e.file_name}</a> <br/>\n                    <span class="label label-default">${moment(e.created_at).format("MMM. DD, YYYY hh:mm a")}</span>\n                </li>\n            `)})}};let mConn={};const connect=async(e,t,n)=>{switch(n){case"SIMPLE":if(void 0===mConn.cId&&(SIMPLE.emit("join-room",{id:t}),mConn={cId:t,type:"SIMPLE"}),t!==mConn.cId){SIMPLE.emit("join-room",{id:t}),mConn={cId:t,type:"SIMPLE"};for(const e of $(contentChatboxList).children())$(e).remove();renderUI(mConn.cId)}else renderUI(mConn.cId);break;case"GROUP":if(void 0===mConn.cId&&(GROUP.emit("join-room",{id:t}),mConn={cId:t,type:"GROUP"}),t!==mConn.cId){GROUP.emit("join-room",{id:t}),mConn={cId:t,type:"GROUP"};for(const e of $(contentChatboxList).children())$(e).remove();renderUI(mConn.cId)}else renderUI(mConn.cId)}initUI(e)},groupConfirm=e=>{const t=e.parentElement.previousElementSibling.children[1].children[0],n=t.dataset.id,i=t.textContent,o=[{member_id:id,role:"ADMIN"},{member_id:n,role:"MEMBER"}];swal({width:"50rem",type:"question",title:"Please choose an option",focusConfirm:!1,showCloseButton:!0,showCancelButton:!0,showConfirmButton:!0,allowOutsideClick:!1,confirmButtonColor:"#5cb85c",confirmButtonText:`\n            <i class="fa fa-user-plus fa-2x" aria-hidden="true"></i>\n            <br/>Add <strong>${i}</strong> <br/>to a New Group\n        `,confirmButtonAriaLabel:"Add to New Group",cancelButtonColor:"#337ab7",cancelButtonText:`\n            <i class="fa fa-users fa-2x" aria-hidden="true"></i>\n            <br/>Add <strong>${i}</strong> <br/>to an Existing Group\n        `,cancelButtonAriaLabel:"Add to an Existing Group"}).then(e=>{e.value?swal({title:"Please specify a group name",input:"text",inputAttributes:{autocapitalize:"off"},confirmButtonText:"Submit",showLoaderOnConfirm:!0,preConfirm:e=>{if(e)return fetch(`${BK_URL}/api/thread`,{method:"POST",body:JSON.stringify({type:"GROUP",name:e,members:o}),headers:{Accept:"application/json","Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw new Error(t.statusText);const n=await t.json();return n.result=e,n.members=o,n}).catch(e=>{Swal.showValidationMessage(`Request failed: ${e}`)});Swal.showValidationMessage("Please specify a group name")},allowOutsideClick:()=>!Swal.isLoading()}).then(e=>{console.log(e)}):console.log("Existing Group")})};document.addEventListener("DOMContentLoaded",async e=>{FilePond.registerPlugin(FilePondPluginImageCrop,FilePondPluginImageEdit,FilePondPluginImageExifOrientation,FilePondPluginImagePreview,FilePondPluginImageResize,FilePondPluginImageTransform,FilePondPluginImageValidateSize,FilePondPluginFileEncode,FilePondPluginFileMetadata,FilePondPluginFilePoster,FilePondPluginFileRename,FilePondPluginFileValidateSize,FilePondPluginFileValidateType),btnHeaderSetting=document.querySelector("#btn-header-setting"),btnHeaderMessage=document.querySelector("#btn-header-message"),sidebarList=document.querySelector(".msgr-sidebar-list"),mainHeaderDetailsH4=document.querySelector(".msgr-main-header-details > h4"),contentChatboxHeaderImg=document.querySelector(".msgr-main-content-chatbox-header > img"),contentChatboxHeaderDetailsH4=document.querySelector(".msgr-main-content-chatbox-header-details > h4"),contentChatboxList=document.querySelector(".msgr-main-content-chatbox-list > .os-padding > .os-viewport > .os-content"),contentChatboxInput=document.querySelector(".msgr-main-content-chatbox-input"),contentChatboxInputBox=document.querySelector("#content-chatbox-input-box"),btnChatboxPhoto=document.querySelector("#btn-chatbox-photo"),btnChatboxFile=document.querySelector("#btn-chatbox-file"),btnChatboxEmoji=document.querySelector("#btn-chatbox-emoji"),btnChatboxSend=document.querySelector("#btn-chatbox-send"),swal.mixin({input:"text",confirmButtonText:"Next &rarr;",progressSteps:["1","2"],showCloseButton:!1,allowOutsideClick:!1,showCancelButton:!1}).queue(["Enter ID","Enter Name"]).then(async e=>{const t=e.value.filter(e=>e);void 0!==t&&0!=t.length&&(id="f9c159af-6f58-441d-b26f-a6ab4b497eaf",name="Maria Powell",axios.get(`${BK_URL}/api/member/${id}?expand=threads`).then(e=>{const t=e.data.threads.map(e=>{return`\n                        <div class="msgr-sidebar-list-item" onClick="connect(this, '${e.id}', '${e.type}')">\n                            <div class="msgr-sidebar-list-item-content">\n                                <img class="img-circle" src="/img/${"GROUP"==e.type?"3":"M"==e.sex?"1":"2"}.png" alt="User image">                        \n                                <div class="msgr-sidebar-list-item-content-details">\n                                    <h4>${e.name}</h4>\n                                    <p>${e.message?e.message.latest:"-"}</p>\n                                </div>\n                            </div>\n            \n                            <div class="msgr-sidebar-list-item-settings">\n                                <span>${e.message?moment(e.message.time).format("ddd"):"-"}</span>\n                            </div>\n                        </div>\n                    `}).join("");sidebarList.innerHTML=t,OverlayScrollbars(sidebarList,{})}),initConn(id,name),contentChatboxInputBox.addEventListener("keydown",e=>{if(13===e.keyCode&&!e.shiftKey){e.preventDefault();const t=moment().format("MMM DD, YYYY, hh:mm a"),n=e.target.value;"GROUP"==mConn.type&&GROUP.emit("chat",{cId:mConn.cId,uId:id,message:n,timestamp:t}),SIMPLE.emit("chat",{cId:mConn.cId,uId:id,message:n,timestamp:t}),contentChatboxInputBox.value=""}}))})});